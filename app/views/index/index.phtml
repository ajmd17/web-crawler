<div class="header">
    <h1>
        Results for <?php echo $crawlResult->path; ?>
    </h1>
</div>
<div class="content">
    <table class="table">
        <thead>
            <tr>
                <th>Path</th>
                <th>Status</th>
                <th>Title</th>
                <th>Internal links</th>
                <th>External links</th>
                <th>Images (unique)</th>
                <th>Words on page</th>
                <th>Load time</th>
            </tr>
        </thead>
        <tbody>
            <?php
                function getStatusClass($statusCode) {
                    $statusClass = 'status-code--';
                    if ($statusCode >= 200 && $statusCode < 300) {
                        $statusClass .= 'good';
                    } elseif ($statusCode >= 300 && $statusCode < 400) {
                        $statusClass .= 'redirect';
                    } else {
                        $statusClass .= 'bad';
                    }
                    return $statusClass;
                }

                function extractAttributeForJson($objects, $attributeName) {
                    return htmlspecialchars(json_encode(
                        array_values(
                            array_map(function ($object) use ($attributeName) {
                                return $object->getAttribute($attributeName);
                            }, $objects)
                        )
                    ), ENT_QUOTES, 'UTF-8');
                }

                $baseUrl = rtrim($crawlResult->path, '/');

                foreach ($crawlResult->getAllNestedResults() as $result) {
                    $path = $result->path;
                    $statusCode = $result->response->status;
                    $statusClass = getStatusClass($statusCode);
                    $title = $result->getPageTitle();
                    $internalLinks = $result->getInternalLinks(false, true);
                    $internalLinksArray = extractAttributeForJson($internalLinks, 'href');
                    $internalLinksCount = count($internalLinks);
                    $externalLinks = $result->getExternalLinks(false, true);
                    $externalLinksArray = extractAttributeForJson($externalLinks, 'href');
                    $externalLinksCount = count($externalLinks);
                    $uniqueImages = $result->getImages(false, true);
                    $uniqueImagesArray = extractAttributeForJson($uniqueImages, 'src');
                    $uniqueImagesCount = count($uniqueImages);
                    $wordsOnPage = $result->getWordCount();
                    $loadTimeSeconds = round($result->getElapsedTime(), 3) . 's';

                    echo "
                        <tr>
                            <td><a href='$path' target='_blank'>$path</a></td>
                            <td class='$statusClass'>$statusCode</td>
                            <td>$title</td>
                            <td>$internalLinksCount <a class='showLinks' href='#' data-base-url='$baseUrl' data-links='$internalLinksArray'>(Show)</a></td>
                            <td>$externalLinksCount <a class='showLinks' href='#' data-links='$externalLinksArray'>(Show)</a></td>
                            <td>$uniqueImagesCount <a class='showLinks' href='#' data-base-url='$baseUrl' data-links='$uniqueImagesArray'>(Show)</a></td>
                            <td>$wordsOnPage</td>
                            <td>$loadTimeSeconds</td>
                        </tr>
                    ";
                }
            ?>
        </tbody>
    </table>

    <div class="total-results-wrapper">
        <div class='total-results'>
            <div>
                <strong>Total pages crawled:</strong>
                <?php echo(count($crawlResult->getAllNestedResults())); ?>
            </div>
            <div>
                <strong>Total unique images:</strong>
                <?php echo(count($crawlResult->getImages(true, true))); ?>
            </div>
            <div>
                <strong>Total unique internal links:</strong>
                <?php echo(count($crawlResult->getInternalLinks(true, true))); ?>
            </div>
            <div>
                <strong>Total unique external links:</strong>
                <?php echo(count($crawlResult->getExternalLinks(true, true))); ?>
            </div>
            <hr/>
            <div>
                <strong>Avg time per page:</strong>
                <?php echo(round($crawlResult->calculateAverageElapsedTime(), 3) . 's'); ?>
            </div>
            <div>
                <strong>Avg title length (characters):</strong>
                <?php echo($crawlResult->calculateAverageTitleLengthCharacters() . ' characters'); ?>
            </div>
            <div>
                <strong>Avg title length (words):</strong>
                <?php echo($crawlResult->calculateAverageTitleLengthWords() . ' words'); ?>
            </div>
            <div>
                <strong>Avg words on page:</strong>
                <?php echo($crawlResult->calculateAverageWordCount() . ' words'); ?>
            </div>
        </div>
    </div>
</div>

<script type='text/javascript'>
    function onLoad() {
        Array.prototype.forEach.call(document.getElementsByClassName('showLinks'), (link) => {
            link.addEventListener('click', (event) => {
                event.preventDefault()

                const links = JSON.parse(link.dataset.links),
                    baseUrl = link.dataset.baseUrl,
                    closestTd = link.closest('td')

                closestTd.innerHTML = '<div>' + links.map((link) => {
                    let href = link;

                    if (href.startsWith('data:')) {
                        return `<span><i>data image</i></span>`;
                    } else if (baseUrl) {
                        href = `${baseUrl}${href}`
                    }

                    return `<a href='${href}' target='_blank'>${link}</a>`
                }).join('<br>') + '</div'
            })
        })
    }

    addEventListener('load', function () {
        onLoad()
    })
</script>